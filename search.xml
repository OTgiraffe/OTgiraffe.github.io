<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无间道</title>
      <link href="/2023/09/11/%E6%97%A0%E9%97%B4%E9%81%93/"/>
      <url>/2023/09/11/%E6%97%A0%E9%97%B4%E9%81%93/</url>
      
        <content type="html"><![CDATA[<p>情节：</p><p>​警官黄志城安排陈永仁(梁朝伟)在黑帮里当卧底，黑帮老大韩琛安插刘建明(刘德华)在警局当眼线。一次缉毒中，双方斗智斗勇最后缉毒失败。双方都知道自己这有对方眼线都要找出。黄志城在一次与陈永仁会面中被刘建明设计死于黑帮之手。刘建明利用陈永仁将黑帮一网打尽，并亲手杀死了韩琛。陈永仁回警局恢复卧底身份，在刘建明桌上看到了在黑帮自己上交的档案袋，发现刘建明是黑帮眼线。陈永仁将刘建明约出，陈永仁最后被另一个黑帮眼线B杀害，电梯里刘建明将B枪杀，刘建明继续当警官逍遥法外。</p><p>思考：</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2023年电影</title>
      <link href="/2023/09/10/2023%E5%B9%B4%E7%94%B5%E5%BD%B1/"/>
      <url>/2023/09/10/2023%E5%B9%B4%E7%94%B5%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<p>八月：</p><p>《黑客帝国1-3》2023&#x2F;8&#x2F;14 - 2023&#x2F;8&#x2F;18</p><p>《封神第一部》2023&#x2F;8&#x2F;19</p><p>《无间道》2023&#x2F;8&#x2F;23 - 2023&#x2F;8&#x2F;29</p><p>《霸王别姬》2023&#x2F;8&#x2F;29 - 2023&#x2F;9&#x2F;5</p><p>九月：</p><p>《十二怒汉》2023&#x2F;9&#x2F;7</p><p>《触不可及》2023&#x2F;9&#x2F;8</p>]]></content>
      
      
      <categories>
          
          <category> 统计 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>黑客帝国(1-3)</title>
      <link href="/2023/09/10/%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD(1-3)/"/>
      <url>/2023/09/10/%E9%BB%91%E5%AE%A2%E5%B8%9D%E5%9B%BD(1-3)/</url>
      
        <content type="html"><![CDATA[<p>只看前三部，觉得第三部就已经终结了，没看第四部。</p><p>情节：</p><p>​黑客尼奥在崔妮蒂的指引下加入人类反抗组织中墨菲斯的团队，回到了现实，发现原来自己一直生活在计算机程序“矩阵”所创造的虚拟世界中。墨菲斯也一直坚信尼奥是救世主，想跟尼奥一起将所有人类从“矩阵”的控制下救出。</p><p>​在先知的指引下，他们在虚拟世界中对抗“矩阵”，打败史密斯，“矩阵”也在现实中派出乌贼大军袭击人类基地，期间尼奥也收获了与崔妮蒂的爱情，最后尼奥通过牺牲自己来消灭变异后的史密斯(变异史密斯对“矩阵”来说就是病毒)，换来了人类与“矩阵”的和平。而这一切都是先知和“矩阵”事先安排来消灭人类和程序中的不稳定因素，来保证“矩阵”健康。</p><p>思考：</p><p>​假设我们生活在梦境中，生活和选择其实都是被安排好的，我们怎么知道不是？</p><p>​我想起之前看的一本《平面国》，说的是一个二维的世界，里面的“人类”就是三角形，他们生活在一个二维世界中，无法理解三维世界。三维世界是在他们认知之外的事，有一次一个三角形被三维世界的球带着理解的三维世界，当他回到二维世界时，说起了三维世界，周围的三角形都觉得他是怪人，最后把他关起来。所以如果现在我们是生活在梦境中，现实是否就是我们认知之外的事？</p><p>看：2023&#x2F;8&#x2F;14 - 2023&#x2F;8&#x2F;18</p><p>写：2023&#x2F;9&#x2F;9-2023&#x2F;9&#x2F;10</p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F-%E6%A6%82%E8%A6%81/"/>
      <url>/2023/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F-%E6%A6%82%E8%A6%81/</url>
      
        <content type="html"><![CDATA[<p>计算机系统-概要</p><p>1.计算机系统是由硬件和软件组成</p><p>1.1硬件组成<img src="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F-%E6%A6%82%E8%A6%81/%E6%88%AA%E5%B1%8F2023-08-30%E4%B8%8A%E5%8D%887.18.46.png" alt="截屏2023-08-30上午7.18.46"></p><p>可以简化成<img src="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F-%E6%A6%82%E8%A6%81/%E6%88%AA%E5%B1%8F2023-08-30%E4%B8%8A%E5%8D%887.18.57.png" alt="截屏2023-08-30上午7.18.57"></p><p>I&#x2F;O设备：输入&#x2F;输出设备是系统与外界联系的通道，系统通过它向外界传送数据，从外界接收数据。包括鼠标、键盘、显示器、磁盘、网络等</p><p>主存：临时存储数据的设备，运行程序时存放程序和程序处理的数据，其中程序也是数据。物理上是由一组动态随机存储器(DRAM)芯片组成。</p><p>处理器：中央处理单元(CPU)，解释和执行主存中的指令，主要由PC、寄存器文件、ALU组成。</p><ul><li>PC：程序计数器，存放当前执行机器语言指令在主存的地址，可理解为指向了主存中该机器语言指令。</li><li>寄存器文件：存储计算的数据</li><li>ALU：计算新数据和新地址(下一条执行的机器语言指令）</li></ul><p>系统硬件组成就能完成如下操作：</p><ul><li>加载：从主存复制一字节到寄存器文件，覆盖寄存器文件原内容</li><li>存储：从寄存器文件复制一字节到主存某位置，覆盖原内容</li><li>操作：两寄存器内容复制到ALU，ALU计算后回写到其中一寄存器</li><li>跳转：从指令中抽取一个字复制到PC，覆盖原值</li></ul><p>2.软件</p><p>软件分为程序和操作系统，因为硬件只能识别机器语言，也就是二进制，所以软件要在硬件上执行，必须为二进制文件。</p><p>程序：</p><p>平时编写的程序基本都是用高级语言如Swift，JS来编写，硬件无法直接执行，需要将其编译成二进制文件。</p><p>如何将程序编译成二进制文件</p><p>包括四个阶段：预处理、编译、汇编、链接</p><p><img src="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F-%E6%A6%82%E8%A6%81/%E6%88%AA%E5%B1%8F2023-08-30%E4%B8%8B%E5%8D%8810.01.47.png" alt="截屏2023-08-30下午10.01.47"></p><p>预处理阶段：预处理器将引入的头文件(C语言：#include&lt;stdio.h&gt;)插入到程序中，hello.i</p><p>编译阶段：编译器将文本文件hello.i翻译成汇编语言文件hello.s</p><p>汇编阶段：汇编器将hello.s翻译成机器语言指令，并打包成可重定位目标程序hello.o(二进制)</p><p>链接阶段：链接器将调用的其他库链接进hello.o文件，如printf.o，然后以某种方式合并为hello可执行二进制文件。</p><p>Unix系统上可以用gcc将hello.c编译成hello可执行文件</p><p>gcc -o hello hello.c</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>个人网站-创建</title>
      <link href="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/"/>
      <url>/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>大部分人是没有私人服务器的，所以本篇指导的是用github的服务器，将个人网站是部署在github上<br>主要内容：</p><ol><li>创建用来部署个人网站github仓库，</li><li>在本地用Hexo创建个人网站</li><li>将个人网站部署到GitHub仓库</li><li>访问个人网站</li></ol><h3 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h3><p>ps: 有github账号可跳过这步</p><p>注册地址：<a href="https://github.com/signup?source=login">https://github.com/signup?source=login</a></p><p>用邮箱注册GitHub账号</p><h3 id="创建github个人仓库"><a href="#创建github个人仓库" class="headerlink" title="创建github个人仓库"></a>创建github个人仓库</h3><p>登录github，如下点击New按钮，进入创建仓库界面</p><p><img src="image-new.png" alt="image-new" style="zoom:50%;" />创建个人仓库，这里的仓库名字要<strong>固定写法</strong>：用户名.github.io，如：OTgiraffe.github.io，这里的用户名要替换成你的</p><img src="image-create.png" alt="image-create" style="zoom:50%;" /><h3 id="Git管理"><a href="#Git管理" class="headerlink" title="Git管理"></a>Git管理</h3><p>Git 是目前世界上最先进的分布式版本控制系统（没有之一）。这是使用 Git 的目的是为了将我们的网站从本地提交上服务器（GitHub）上面去。不懂得可以看廖雪峰老师的教程：<a href="https://www.liaoxuefeng.com/wiki/896043488029600">https://www.liaoxuefeng.com/wiki/896043488029600</a><br>安装好Git后，设置 user.name 和 user.email 配置信息，这里设置为全局。</p><p>终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br></pre></td></tr></table></figure><p>回车，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;OTgiraffe&quot;</span><br></pre></td></tr></table></figure><p>终端输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>回车，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;OTgiraffe@163.com&quot;</span><br></pre></td></tr></table></figure><h3 id="配置github-SSH秘钥"><a href="#配置github-SSH秘钥" class="headerlink" title="配置github SSH秘钥"></a>配置github SSH秘钥</h3><p>上面是你创建的个人github仓库，只有你有权限往仓库上传数据，所以在上传数据时，github会进行鉴定权限，也就是确定这个上传数据的是不是你，鉴权有两种方式：</p><ul><li>账号密码</li><li>SSH秘钥</li></ul><p>上传数据账号密码鉴权在21年就已经禁止，如果你用账号密码上传会有以下提示</p><p>补充</p><p>所以只能用SSH秘钥鉴权方式</p><h4 id="生成本地SSH秘钥"><a href="#生成本地SSH秘钥" class="headerlink" title="生成本地SSH秘钥"></a>生成本地SSH秘钥</h4><p>终端输入: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ras -C &quot;你的github注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ras -C &quot;OTgiraffe@163.com&quot;</span><br></pre></td></tr></table></figure><p>直接三个回车，默认不需要密码，最后得到两个文件id_rsa和id_rsa.pub</p><img src="image-rsa-folder.png" alt="image-rsa-folder" style="zoom:100%;" /><h4 id="将本地生成的秘钥添加到github"><a href="#将本地生成的秘钥添加到github" class="headerlink" title="将本地生成的秘钥添加到github"></a>将本地生成的秘钥添加到github</h4><p>打开id_rsa.pub,将里面的内容全部复制</p><img src="image-rsa.png" alt="image-rsa" style="zoom:100%;" /> <p>添加到github: Settings -&gt; SSH and GPG keys -&gt;new SSH key</p><img src="image-github-rsa.png" alt="image-github-rsa" style="zoom:100%;" /><h4 id="测试添加github秘钥是否成功"><a href="#测试添加github秘钥是否成功" class="headerlink" title="测试添加github秘钥是否成功"></a>测试添加github秘钥是否成功</h4><p>终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>回车，你会看到:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1The authenticity of host &#x27;github.com (207.97.227.239)&#x27; can&#x27;t be established.</span><br><span class="line">2RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">3Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>选择 yes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi OTgiraffe! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>看到Hi就说明配置SSH成功了</p><h3 id="安装个人网站生成工具Hexo"><a href="#安装个人网站生成工具Hexo" class="headerlink" title="安装个人网站生成工具Hexo"></a>安装个人网站生成工具Hexo</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>Hexo基于Node.js，因此需先安装Node.js，可以通过这里选择对应的电脑版本安装：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811115752963.png" alt="image-20230811115752963"></p><p>是否安装成功，终端&#x2F;cmd输入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>如果输出了node的版本号就说明成功了</p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811120125859.png" alt="image-20230811120125859"></p><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>使用npm安装Hexo，终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="用Hexo生成和配置个人网站"><a href="#用Hexo生成和配置个人网站" class="headerlink" title="用Hexo生成和配置个人网站"></a>用Hexo生成和配置个人网站</h3><h4 id="初始化个人网站"><a href="#初始化个人网站" class="headerlink" title="初始化个人网站"></a>初始化个人网站</h4><p>进入需创建的目录，终端输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myBlog</span><br></pre></td></tr></table></figure><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811154419946.png" alt="image-20230811154419946"></p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811154304580.png" alt="image-20230811154304580"></p><h4 id="生成网页静态文件，终端输入："><a href="#生成网页静态文件，终端输入：" class="headerlink" title="生成网页静态文件，终端输入："></a>生成网页静态文件，终端输入：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate </span><br></pre></td></tr></table></figure><p>可简写成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811162539494.png" alt="image-20230811162539494"></p><h4 id="启动服务预览文章，终端输入："><a href="#启动服务预览文章，终端输入：" class="headerlink" title="启动服务预览文章，终端输入："></a>启动服务预览文章，终端输入：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>可简写成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>遇到这种服务端口4000被占用，没有的话直接用：<a href="http://localhost:4000/">http://localhost:4000/</a> 访问</p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811162802262.png" alt="image-20230811162802262"></p><p>可以用如下命令启用另外的端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5000</span><br></pre></td></tr></table></figure><p>浏览器打开网址：<a href="http://localhost:5000/">http://localhost:5000/</a> </p><p>就能访问你刚启动本地个人网站了</p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811163146545.png" alt="image-20230811163146545"></p><h3 id="个人网站部署到github服务器上"><a href="#个人网站部署到github服务器上" class="headerlink" title="个人网站部署到github服务器上"></a>个人网站部署到github服务器上</h3><h4 id="配置本地个人网站部署的服务器地址"><a href="#配置本地个人网站部署的服务器地址" class="headerlink" title="配置本地个人网站部署的服务器地址"></a>配置本地个人网站部署的服务器地址</h4><p>在myBlog文件夹中，打开_config.yml文件找到deploy，添加如下参数：</p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811163734534.png" alt="image-20230811163734534"></p><p>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: &#x27;git@github.com:OTgiraffe/OTgiraffe.github.io.git&#x27;</span><br><span class="line">  branch: &#x27;master&#x27;</span><br></pre></td></tr></table></figure><p>当然repo配置是我的地址，要替换成你的，在你第2步生成的github仓库中，进入到你的github仓库：</p><p><img src="/2023/08/10/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-%E5%88%9B%E5%BB%BA/image-20230811164013378.png" alt="image-20230811164013378"></p><h4 id="部署个人网站到github上"><a href="#部署个人网站到github上" class="headerlink" title="部署个人网站到github上"></a>部署个人网站到github上</h4><p>终端进入myBlog文件夹，终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>可简写成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>ps：通过以上命令将个人网站部署到github仓库，其中会检验SSH秘钥，是Hexo帮我们做的，我们只要按第3点配置好秘钥</p><h3 id="访问个人网站"><a href="#访问个人网站" class="headerlink" title="访问个人网站"></a>访问个人网站</h3><p>浏览器输入网址：用户名.github.io访问，如：otgiraffe.github.io</p><p>就可直接访问，部署到github到可访问存在一定延时，一般不超过一分钟。</p><p>主要参考这篇文章写</p><blockquote><p><a href="https://www.zhihu.com/question/22197688">https://www.zhihu.com/question/22197688</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 个人网站教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>哲学是做出来的 - 形式</title>
      <link href="/2023/08/09/%E5%93%B2%E5%AD%A6%E6%98%AF%E5%81%9A%E5%87%BA%E6%9D%A5%E7%9A%84%20-%20%E5%BD%A2%E5%BC%8F/"/>
      <url>/2023/08/09/%E5%93%B2%E5%AD%A6%E6%98%AF%E5%81%9A%E5%87%BA%E6%9D%A5%E7%9A%84%20-%20%E5%BD%A2%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="哲学是做出来的-形式"><a href="#哲学是做出来的-形式" class="headerlink" title="哲学是做出来的 - 形式"></a>哲学是做出来的 - 形式</h1><p>哲学就是论证答复论证</p>]]></content>
      
      
      <categories>
          
          <category> 哲学 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
